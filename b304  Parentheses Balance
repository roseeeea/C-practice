//https://zerojudge.tw/ShowProblem?problemid=b304
#include<iostream>
#include<stack>
#include<string>
using namespace std;

int main(){
    int n;

   
    
    while(cin >> n){      //一次讀完字串
        int judge=1;
        
        for (int i=0; i<n; i++){
            stack<char>st;
            string s;
           
            cin >> s;
            getline(cin,s);
            
            /*
            while(!st.empty()){     //清空之前暫存
                st.pop();
            }
             */
            
            for(int i=0; i<s.length(); i++){
                if (s[i]== '['){
                    st.push('[');   //儲存[
                }
                if (s[i]== '('){
                    st.push('(');   //儲存(
                }
       
                if(s[i]==']'){
                    if(st.size()>0){   //此確保[]的正確順序，而非][
                        if(st.top()=='['){
                            st.pop();
                        }
                        else{
                            judge = -1;
                            break;
                        }
                    }
                    else{   //如果][，整個式子不成立
                        judge = -1;
                        break;
                    }
                }
            
                if(s[i]==')'){
                    if(st.size()>0){   //此確保[]的正確順序，而非][
                        if(st.top()=='('){
                            st.pop();
                        }
                        else{
                            judge = -1;
                            break;
                        }
                    }
                    else{   //如果][，整個式子不成立
                        judge = -1;
                        break;
                    }
                }
        
            }
        
            if(st.size()==0){
                if(judge==1){
                    cout << "Yes"<< endl;
                }
                else{
                    cout << "No" << endl;
                }
            }
            else{
                cout << "No" << endl;
            }

        }
    }
    
    return 0;
}


